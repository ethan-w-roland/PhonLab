[{"C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\index.tsx":"1","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\App.tsx":"2","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\Home.tsx":"3","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\Flashcards.tsx":"4","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\Phonology.tsx":"5","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\Generic.tsx":"6","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\components\\Carousel.tsx":"7","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\components\\FlipCard.tsx":"8","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\Quiz.tsx":"9","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\components\\QuizBox.tsx":"10","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\Vocab.tsx":"11","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\components\\QuizCard.tsx":"12"},{"size":167,"mtime":1612049175505,"results":"13","hashOfConfig":"14"},{"size":752,"mtime":1612049478464,"results":"15","hashOfConfig":"14"},{"size":257,"mtime":1612049413483,"results":"16","hashOfConfig":"14"},{"size":1660,"mtime":1617931696436,"results":"17","hashOfConfig":"14"},{"size":227,"mtime":1617931876845,"results":"18","hashOfConfig":"14"},{"size":974,"mtime":1617902333691,"results":"19","hashOfConfig":"14"},{"size":5260,"mtime":1617903857520,"results":"20","hashOfConfig":"14"},{"size":1959,"mtime":1617405612351,"results":"21","hashOfConfig":"14"},{"size":1407,"mtime":1617931812006,"results":"22","hashOfConfig":"14"},{"size":4220,"mtime":1617397255680,"results":"23","hashOfConfig":"14"},{"size":268,"mtime":1612048734818,"results":"24","hashOfConfig":"14"},{"size":2351,"mtime":1617419011375,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1gl8qam",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\index.tsx",[],["56","57"],"C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\App.tsx",[],"C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\Home.tsx",["58"],"import styled from 'styled-components'\r\nimport Generic from './Generic'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Generic>\r\n      <a href=\"/Phonology\">Phonology Demo</a>\r\n      <a href=\"/Vocab\">Vocab Demo</a>\r\n    </Generic>\r\n  );\r\n}\r\n\r\nexport default Home;","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\Flashcards.tsx",["59"],"import Generic from \"./Generic\"\r\nimport Carousel from \"./components/Carousel\"\r\nimport data from \"./lesson_1.json\"\r\nimport styled from 'styled-components'\r\nimport {useState} from 'react'\r\n\r\n//make this more generic so the Lessons page can\r\n//pass in which lesson it is via props\r\n\r\nconst Outer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100%;\r\n  width: 100%;`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  box-sizing: border-box;\r\n  height: min(100vh, 100vw, 100%);\r\n  width: min(90vh, 105vw, 100%);\r\n  max-width: 600px;\r\n  max-height: 570px;\r\n  padding:20px;`\r\n\r\nconst ChapterTitle = styled.div`\r\n  box-sizing: border-box;\r\n  display: flex;\r\n  justify-content: left;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 30px;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n  color: #383838;`\r\n\r\nconst ChapterDetails = styled.div`\r\n  box-sizing: border-box;\r\n  justify-content: left;\r\n  align-items: center;\r\n  width: 100%;\r\n  height: 20px;\r\n  font-size: 15px;\r\n  color: #545454;\r\n  padding-bottom:5px;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;`\r\n\r\nconst MyCarousel = styled(Carousel)`\r\n  width:100%;\r\n  height: 100%;`\r\n\r\nconst Flashcards = () => {\r\n\r\n  return (\r\n    <Generic>\r\n      <Outer>\r\n      <Container>\r\n        <ChapterTitle>Lesson 1</ChapterTitle>\r\n        <ChapterDetails>A demonstration of flipcard mechanics</ChapterDetails>\r\n        <MyCarousel cards_info={data}/>\r\n      </Container>\r\n      </Outer>\r\n    </Generic>\r\n  );\r\n}\r\n\r\nexport default Flashcards;","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\Phonology.tsx",["60"],"import styled from 'styled-components'\r\nimport Generic from './Generic'\r\n\r\n//load model\r\n\r\nconst Phonology = () => {\r\n  return (\r\n    <Generic>\r\n      Phonology Content Here\r\n    </Generic>\r\n  );\r\n}\r\n\r\nexport default Phonology;","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\Generic.tsx",[],"C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\components\\Carousel.tsx",[],"C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\components\\FlipCard.tsx",[],["61","62"],"C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\Quiz.tsx",[],"C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\components\\QuizBox.tsx",["63"],"import {useState} from 'react';\r\nimport styled, {keyframes, css} from 'styled-components';\r\nimport QuizCard from './QuizCard'\r\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\r\n\r\nconst OuterContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;`\r\n\r\nconst SoundBar = styled.div`\r\n  width: 100%;\r\n  height: 20px;\r\n  margin-bottom:5px;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;`\r\n\r\nconst Sound = styled.div`\r\n  height: 100%;\r\n  cursor: pointer;\r\n  display:flex;\r\n  flex-direction: row;\r\n  justify-content: flex-end;\r\n  align-items: center;\r\n  &:hover {\r\n    color : orange;\r\n  }`\r\n\r\nconst Container = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  flex: 1 1 auto;\r\n  position: relative;`\r\n\r\nconst in_left = keyframes`\r\n  0% { transform: translateX(15%);\r\n       opacity: 0.6;\r\n       z-index: 100;}\r\n100% { transform: translateX(0);\r\n       opacity: 1;\r\n       z-index: 100;}`\r\n\r\nconst out_left = keyframes`\r\n  0% { transform: translateX(0);\r\n       opacity: 0.8;\r\n       z-index: 1;}\r\n100% { transform: translateX(0);\r\n       opacity: 0;\r\n       z-index: 1}`\r\n\r\nconst in_right = keyframes`\r\n  0% { transform: translateX(-1em);\r\n       opacity: 1;\r\n       z-index: 100;}\r\n100% { transform: translateX(0);\r\n       opacity: 1;\r\n       z-index: 100;}`\r\n\r\nconst out_right = keyframes`\r\n  0% { transform: translateX(0);\r\n       opacity: 1;\r\n       z-index: 1;}\r\n100% { transform: translateX(.5em);\r\n       opacity: 0;\r\n       z-index: 1}`\r\n\r\nconst animations = {\r\n \"show\":      css`opacity: 1; z-index: 100`,\r\n \"hide\":      css`opacity: 0; z-index: 1`,\r\n \"in_left\":   css`animation: ${in_left} 0.2s ease both`,\r\n \"out_left\":  css`animation: ${out_left} 0.2s ease both`,\r\n \"in_right\":  css`animation: ${in_right} 0.2s ease both`,\r\n \"out_right\": css`animation: ${out_right} 0.2s ease both`\r\n}\r\n\r\nconst Item = styled.div`\r\n  background-color: transparent;\r\n  height: 100%;\r\n  width: 100%;\r\n  position: absolute;\r\n  ${(props) => animations[props.animation]};`\r\n\r\nvar state = {\r\n  init: true,\r\n  ind: 0,\r\n  audio: null,\r\n  anis: []\r\n}\r\ntype QuizBoxProps = {cards_info : any, className?:any}\r\nconst QuizBox = ({cards_info, className=null}:QuizBoxProps) => {\r\n\r\n  const num_page = cards_info.length;\r\n  var [cur, set_cur] = useState(false)\r\n  function render(){\r\n    set_cur(!cur);\r\n  };\r\n\r\n  if (state.init) {\r\n    for (var x = 0; x < num_page; x++) { state.anis.push('hide') }\r\n    state.anis[0] = 'show';\r\n    state.init = false;\r\n    state.audio = new Audio(cards_info[0].audio);\r\n  }\r\n\r\n  //card finished callback\r\n  const finished = (res) => {\r\n    setTimeout( ()=>{\r\n      var i = state.ind + 1;\r\n      if (i-2 >= 0) {state.anis[i-2] = 'hide'}\r\n      state.anis[i-1] = 'out_left';\r\n      state.anis[i] = 'in_left';\r\n      state.audio = new Audio(cards_info[i].audio);\r\n      state.ind = i;\r\n      render();\r\n    }, 900)\r\n  }\r\n\r\n  //generates quiz items\r\n  var Items = cards_info.map((info, i) => {\r\n    var cor_ind = Math.floor(Math.random() * 4);\r\n    var inds = [0,0,0,0]\r\n    for (var j=0; j < 4; j++){\r\n      if (j !== cor_ind) {\r\n        var rand = i\r\n        while (rand == i) {\r\n          rand = Math.floor(Math.random() * cards_info.length);\r\n        }\r\n        inds[j] = rand;\r\n      } else {\r\n        inds[j] = i;\r\n      }\r\n    }\r\n    return (\r\n      <Item id={i} key={i} animation={state.anis[i]}>\r\n      <QuizCard\r\n        image={info.image}\r\n        a={cards_info[inds[0]].vocab}\r\n        b={cards_info[inds[1]].vocab}\r\n        c={cards_info[inds[2]].vocab}\r\n        d={cards_info[inds[3]].vocab}\r\n        cor={cor_ind}\r\n        fin={finished}/>\r\n      </Item>\r\n    )}\r\n  )\r\n\r\n  const playAudio = () => {\r\n    state.audio.currentTime = 0;\r\n    state.audio.play();\r\n  }\r\n\r\n  console.log(state)\r\n\r\n  return (\r\n    <div className={className}>\r\n      <OuterContainer>\r\n        <SoundBar>\r\n          <Sound onClick={playAudio}>\r\n            <VolumeUpIcon fontSize=\"small\"/>\r\n          </Sound>\r\n        </SoundBar>\r\n        <Container>\r\n          {Items.slice(Math.max(0,state.ind-1),Math.min(num_page, state.ind+2))}\r\n        </Container>\r\n      </OuterContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuizBox","C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\Vocab.tsx",[],"C:\\Users\\Roland\\Documents\\PhonLab\\react_site\\src\\pages\\components\\QuizCard.tsx",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":14},{"ruleId":"68","severity":1,"message":"72","line":5,"column":9,"nodeType":"70","messageId":"71","endLine":5,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":14},{"ruleId":"64","replacedBy":"73"},{"ruleId":"66","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":128,"column":21,"nodeType":"77","messageId":"78","endLine":128,"endColumn":23},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"@typescript-eslint/no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.",["79"],["80"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]